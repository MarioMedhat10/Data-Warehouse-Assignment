<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/12/2023 1:33:28 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="MARIO-PC"
  DTS:CreatorName="MARIO-PC\mario"
  DTS:DTSID="{93DB72E4-6C0D-4391-8654-310032C7BB75}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5131.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Problem 1"
  DTS:PackageType="5"
  DTS:VersionBuild="1"
  DTS:VersionGUID="{CB5692FC-D68A-4E56-A962-AFA647D553C7}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[MARIO-PC.DWH_Assignment]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{A420A897-4ED6-4E78-A76B-C8517F52F8BC}"
      DTS:ObjectName="MARIO-PC.DWH_Assignment">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=MARIO-PC;Initial Catalog=DWH_Assignment;Provider=SQLNCLI11.1;Integrated Security=SSPI;Application Name=SSIS-Package-{A420A897-4ED6-4E78-A76B-C8517F52F8BC}MARIO-PC.DWH_Assignment;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Load the table from the API"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{97de7018-b4c3-4a47-81fb-1ba2bd395251}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Load the table from the API"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b347131a76404ff0a7e1af285ae2a65b"
          VSTAMajorVersion="16"
          VSTAMinorVersion="0"
          Language="CSharp">
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="packages.config"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Newtonsoft.Json" version="13.0.3" targetFramework="net472" />
</packages>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Settings.get_Default():ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Sett" +
    "ings")]

namespace ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.IO;
using System.Net;
using Newtonsoft.Json;
#endregion

namespace ST_e1a9c7fc42904c7b9986be683ef0fd7d
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        public class University
        {
            public List<string> Domains { get; set; }
            public string Country { get; set; }
            public string Alpha_two_code { get; set; }
            public string State_province { get; set; }
            public List<string> Web_pages { get; set; }
            public string Name { get; set; }
        }
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
		{
            string currentdatetime = DateTime.Now.ToString("yyyy-MM-dd-HH-mm-ss");
            string LogFolder = @"D:\";
            try
            {
                ServicePointManager.Expect100Continue = true;
                ServicePointManager.SecurityProtocol = SecurityProtocolType.Tls12;

                var json = "";
                using (WebClient wc = new WebClient())
                {
                    json = wc.DownloadString("http://universities.hipolabs.com/search?");
                }


                List<University> universities = JsonConvert.DeserializeObject<List<University>>(json);

                foreach (University university in universities)
                {
                    //Debug.WriteLine("Domains: " + university.Domains[0]);
                    //Debug.WriteLine("Country: " + university.Country);
                    //Debug.WriteLine("Alpha_two_code: " + university.Alpha_two_code);
                    //Debug.WriteLine("State_province: " + university.State_province);
                    //Debug.WriteLine("Web_pages: " + university.Web_pages[0]);
                    //Debug.WriteLine("Name: " + university.Name);
                    //Debug.WriteLine("");

                    string connectionString = @"Data Source = MARIO-PC; Initial Catalog = DWH_Assignment; Integrated Security = True; ";
                    using (SqlConnection connection = new SqlConnection(connectionString))
                    {
                        // Open the connection
                        connection.Open();

                        // Create the insert statement
                        string insertStatement = "INSERT INTO University(domains,country,alpha_two_code,state_province,web_pages,name) " +
                            "VALUES('" + university.Domains[0].Replace("'", "''") + "', '" + university.Country.Replace("'", "''") + "', '" + university.Alpha_two_code.Replace("'", "''") + "', '" + university.State_province + "', '" + university.Web_pages[0].Replace("'", "''") + "', '" + university.Name.Replace("'", "''") + "')";

                        // Create a SqlCommand object with the insert statement and the SqlConnection object
                        SqlCommand command = new SqlCommand(insertStatement, connection);

                        // Execute the insert statement
                        int rowsAffected = command.ExecuteNonQuery();
                    }
                }
            }

            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(LogFolder + "\\" + "ErrorLog_" + currentdatetime + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                }

            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_b347131a76404ff0a7e1af285ae2a65b.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{42D913D0-E2B3-4131-AEA6-4B6232CC411C}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_e1a9c7fc42904c7b9986be683ef0fd7d</RootNamespace>
    <AssemblyName>ST_b347131a76404ff0a7e1af285ae2a65b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Newtonsoft.Json, Version=13.0.0.0, Culture=neutral, PublicKeyToken=30ad4fe6b2a6aeed, processorArchitecture=MSIL">
      <HintPath>C:\Users\mario\AppData\Local\Temp\Vsta\SSIS_ST160\Vstaw3BCoO3p__kqYTWkH5SVyxA\packages\Newtonsoft.Json.13.0.3\lib\net45\Newtonsoft.Json.dll</HintPath>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_b347131a76404ff0a7e1af285ae2a65b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_b347131a76404ff0a7e1af285ae2a65b</msb:DisplayName>
    <msb:ProjectId>{C0BCB200-2D62-4486-A0AB-3CA02B3C32C2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b347131a76404ff0a7e1af285ae2a65b.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_e1a9c7fc42904c7b9986be683ef0fd7d")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_e1a9c7fc42904c7b9986be683ef0fd7d")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_e1a9c7fc42904c7b9986be683ef0fd7d.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_b347131a76404ff0a7e1af285ae2a65b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHNtXWQAAAAAAAAAAOAAIiALATAAABoAAAAIAAAAAAAAljgA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEQ4AABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAnBgAAAAgAAAAGgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAcAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAB4
OAAAAAAAAEgAAAACAAUAfCMAABAUAAABAAAAAAAAAIw3AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDYAQAAAQAAESgQAAAKDBICcgEAAHAoEQAACgpyKQAA
cAsXKBIAAAogAAwAACgTAAAKcjEAAHANcxQAAAoTBBEEcjMAAHBvFQAACg3eDBEELAcRBG8WAAAK
3AkoAQAAK28YAAAKEwU4EgEAABIFKBkAAAoTBnKFAABwcxoAAAoTBxEHbxsAAAofDY0kAAABJRZy
NAEAcKIlFxEGbwoAAAYWbxwAAApy8QEAcHL1AQBwbx0AAAqiJRhy+wEAcKIlGREGbwwAAAZy8QEA
cHL1AQBwbx0AAAqiJRpy+wEAcKIlGxEGbw4AAAZy8QEAcHL1AQBwbx0AAAqiJRxy+wEAcKIlHREG
bxAAAAaiJR5y+wEAcKIlHwkRBm8SAAAGFm8cAAAKcvEBAHBy9QEAcG8dAAAKoiUfCnL7AQBwoiUf
CxEGbxQAAAZy8QEAcHL1AQBwbx0AAAqiJR8McgUCAHCiKB4AAAoRB3MfAAAKbyAAAAom3gwRBywH
EQdvFgAACtwSBSghAAAKOuL+///eDhIF/hYCAAAbbxYAAArc3jgTCAdyCwIAcAZyIQIAcCgiAAAK
KCMAAAoTCREJEQhvJAAACm8lAAAK3gwRCSwHEQlvFgAACtzeAAIoJgAAChZvJwAACipBfAAAAgAA
ADYAAAAPAAAARQAAAAwAAAAAAAAAAgAAAHgAAADxAAAAaQEAAAwAAAAAAAAAAgAAAF4AAAAlAQAA
gwEAAA4AAAAAAAAAAgAAAK0BAAAQAAAAvQEAAAwAAAAAAAAAAAAAABkAAAB6AQAAkwEAADgAAAAU
AAABHgIoKAAACioeAigpAAAKKq5+AQAABC0ecisCAHDQAwAAAigqAAAKbysAAApzLAAACoABAAAE
fgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKh4CKC0AAAoqLnMIAAAGgAMAAAQqHgJ7BAAABCoi
AgN9BAAABCoeAnsFAAAEKiICA30FAAAEKh4CewYAAAQqIgIDfQYAAAQqHgJ7BwAABCoiAgN9BwAA
BCoeAnsIAAAEKiICA30IAAAEKh4CewkAAAQqIgIDfQkAAAQqQlNKQgEAAQAAAAAADAAAAHY0LjAu
MzAzMTkAAAAABQBsAAAAlAYAACN+AAAABwAATAgAACNTdHJpbmdzAAAAAEwPAACgAgAAI1VTAOwR
AAAQAAAAI0dVSUQAAAD8EQAAFAIAACNCbG9iAAAAAAAAAAIAAAFXHaIJCQsAAAD6ATMAFgAAAQAA
ACwAAAAGAAAADAAAABYAAAAHAAAALQAAAAIAAAAiAAAAAQAAAAMAAAAJAAAAEAAAAAMAAAABAAAA
BQAAAAEAAAACAAAAAQAAAAAA/gQBAAAAAAAGAJMDagYGACIEagYGAN8CVwYPAN4GAAAGAAwDlgUG
AHYDlgUGAFcDlgUGAAkElgUGALMDlgUGAMwDlgUGACMDlgUGAD4DXAQKAOcDrQQKAFYCrQQGAP4B
RAUOALYHkAcGAAEAXABHAD8GAAASALUFwAcGAMMFRAUGACQGEQAGAIkHRAUGAKcCagYGAEsFRAUG
AMICVwYGAAAGigYGAPAFgQUOAJIC6AQOAPMC6AQOAHICbAUOABAGkAcOABECkAcGALcBRAUWAOIH
4AUSAKgFzQUGAIcERAUSAEgBwAcSAD4BzQUGAOcBEQAGADEGEQAKANYErQQGACECRAUGAMMBRAUG
AA4IlgUAAAAACAAAAAAAAQABAAEAEABhBXcAOQABAAEAAAAQAJEGCQdZAAEAAwAAARAAOAcJB3kA
AwAHAAIAEAA/CAAAWQAEAAoAAwEAAGkHAABhAAoAFwARAFAF8AARAEYC9AARAFsB+AABAAwB/AAB
ACUBAwEBALsAAwEBAJsAAwEBAPEA/AABANsAAwEGBhsABgFWgFkHCQFWgCYCCQFQIAAAAACGAGcF
BgABALAiAAAAAIYYSgYGAAEAuCIAAAAAgxhKBgYAAQDAIgAAAACTCPwFDQEBAOwiAAAAAJMILgIS
AQEA8yIAAAAAkwg6AhcBAQD7IgAAAACWCJsHHQECAAIjAAAAAIYYSgYGAAIACiMAAAAAkRhQBiIB
AgAWIwAAAACGCEEHJgECAB4jAAAAAIYITQcuAQIAJyMAAAAAhggnCKoAAwAvIwAAAACGCDMIEAAD
ADgjAAAAAIYIkQGqAAQAQCMAAAAAhgikARAABABJIwAAAACGCGsBqgAFAFEjAAAAAIYIfgEQAAUA
WiMAAAAAhgjtBiYBBgBiIwAAAACGCPsGLgEGAGsjAAAAAIYI7AGqAAcAcyMAAAAAhgj1ARAABwC4
IgAAAACGGEoGBgAIAAAAAQBABAAAAQBABAAAAQBABAAAAQBABAAAAQBABAAAAQBABAAAAQBABAkA
SgYBABEASgYGABkASgYKACkASgYQADEASgYQADkASgYQAEEASgYQAEkASgYQAFEASgYQAFkASgYQ
AGEASgYQAGkASgYGALkASgYGAMkASgYGAOkASgYVAHkAAggzAHkAhQQ4APkARgQ9APkAJgVCAIEA
SgYGAIEAdgQ4AAkBigIGABEBfgdJAAwAPAZgABQA1gdwAJkASgYQABkBXAUGABwAOwV7ACEBUwGB
ACEBdweHACkBSgaNADEBFwiUABQA7geYACEBdwecADkB9wekALEAhQSqAEEBBwIQAHEAYQeuAEkB
pwcBAHEASgYGALEASgYGAFEB1QG0AFEBCgi9ANEASgbDAPEASgYGAAgALADmAAgAMADrACkAewB6
AS4ACwBSAS4AEwBbAS4AGwB6AS4AIwCDAS4AKwCsAS4AMwCsAS4AOwCsAS4AQwCDAS4ASwCyAS4A
UwCsAS4AWwDJAUMAYwDrAEkAewB6AWEAawDrAGMAcwDrAIEAawDrAKEAawDrAMEAawDrAOEAawDr
AAEBawDrACEBawDrAEABawDrAGABawDrAIABawDrAKABawDrAMABawDrAOABawDrAAACawDrACAC
awDrAEACawDrAGACawDrAIACawDrAKACawDrABsAAwABAAQAAwAFAAQAAAAABjcBAABOAjwBAACf
B0EBAABRB0YBAAA3CE4BAACoAU4BAACCAU4BAAD/BkYBAAD5AU4BAgAEAAMAAgAFAAUAAQAGAAUA
AgAHAAcAAgAKAAkAAQALAAkAAgAMAAsAAQANAAsAAgAOAA0AAQAPAA0AAgAQAA8AAQARAA8AAgAS
ABEAAQATABEAAgAUABMAAQAVABMAWQBpAHUABIAAAAEAAABUIRELAAAAAAAALwAAAAQAAAAAAAAA
AAAAAMsAUwAAAAAAEAAAAAAAAAAAAAAA1ACOBAAAAAAEAAAAAAAAAAAAAADLAEQFAAAAAAQAAAAA
AAAAAAAAAMsAIwAAAAAADQAAAAAAAAAAAAAA3QDgBQAAAAAAAAAAAQAAAJsGAAAFAAIABgACAC8A
UAAAAABMaXN0YDEAPE1vZHVsZT4AU3lzdGVtLklPAHZhbHVlX18AU3lzdGVtLkRhdGEAU1RfYjM0
NzEzMWE3NjQwNGZmMGE3ZTFhZjI4NWFlMmE2NWIAbXNjb3JsaWIAU3lzdGVtLkNvbGxlY3Rpb25z
LkdlbmVyaWMAU1RfZTFhOWM3ZmM0MjkwNGM3Yjk5ODZiZTY4M2VmMGZkN2QAPFN0YXRlX3Byb3Zp
bmNlPmtfX0JhY2tpbmdGaWVsZAA8QWxwaGFfdHdvX2NvZGU+a19fQmFja2luZ0ZpZWxkADxOYW1l
PmtfX0JhY2tpbmdGaWVsZAA8V2ViX3BhZ2VzPmtfX0JhY2tpbmdGaWVsZAA8RG9tYWlucz5rX19C
YWNraW5nRmllbGQAPENvdW50cnk+a19fQmFja2luZ0ZpZWxkAERiQ29tbWFuZABTcWxDb21tYW5k
AFJlcGxhY2UAZGVmYXVsdEluc3RhbmNlAGdldF9TdGF0ZV9wcm92aW5jZQBzZXRfU3RhdGVfcHJv
dmluY2UAZ2V0X0FscGhhX3R3b19jb2RlAHNldF9BbHBoYV90d29fY29kZQBJRGlzcG9zYWJsZQBS
dW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBGaWxlAGdldF9OYW1lAHNldF9OYW1l
AERhdGVUaW1lAFdyaXRlTGluZQBTZWN1cml0eVByb3RvY29sVHlwZQBGYWlsdXJlAGdldF9DdWx0
dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBWU1RBUlRTY3JpcHRPYmplY3RNb2RlbEJh
c2UAQXBwbGljYXRpb25TZXR0aW5nc0Jhc2UARGlzcG9zZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBD
b21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAERl
YnVnZ2FibGVBdHRyaWJ1dGUARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEFzc2VtYmx5VGl0bGVB
dHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0aW9uQXR0
cmlidXRlAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0
cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0cmlidXRlAFNTSVNTY3JpcHRUYXNrRW50cnlQb2lu
dEF0dHJpYnV0ZQBBc3NlbWJseUNvbXBhbnlBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlB
dHRyaWJ1dGUAdmFsdWUAc2V0X0V4cGVjdDEwMENvbnRpbnVlAFN5c3RlbS5SdW50aW1lLlZlcnNp
b25pbmcARG93bmxvYWRTdHJpbmcAVG9TdHJpbmcATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRU
YXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0
TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2IzNDcxMzFhNzY0MDRmZjBhN2UxYWYyODVh
ZTJhNjViLmRsbABzZXRfU2VjdXJpdHlQcm90b2NvbABnZXRfSXRlbQBTeXN0ZW0ARW51bQByZXNv
dXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5lY3Rpb24ARXhj
ZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBOZXd0b25zb2Z0Lkpzb24AQ3VsdHVyZUluZm8AZ2V0
X1Jlc291cmNlTWFuYWdlcgBTZXJ2aWNlUG9pbnRNYW5hZ2VyAFN0cmVhbVdyaXRlcgBUZXh0V3Jp
dGVyAEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfZTFhOWM3ZmM0Mjkw
NGM3Yjk5ODZiZTY4M2VmMGZkN2QuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAGdldF9XZWJfcGFnZXMAc2V0X1dlYl9wYWdlcwBTVF9lMWE5YzdmYzQyOTA0Yzdi
OTk4NmJlNjgzZWYwZmQ3ZC5Qcm9wZXJ0aWVzAFNldHRpbmdzAGdldF9Eb21haW5zAHNldF9Eb21h
aW5zAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAENvbmNhdABEZXNlcmlhbGl6ZU9iamVj
dABTeXN0ZW0uTmV0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFdlYkNsaWVudABTeXN0ZW0u
RGF0YS5TcWxDbGllbnQAZ2V0X0N1cnJlbnQASnNvbkNvbnZlcnQATW92ZU5leHQAQ3JlYXRlVGV4
dABnZXRfTm93AGdldF9Bc3NlbWJseQBFeGVjdXRlTm9uUXVlcnkAZ2V0X0NvdW50cnkAc2V0X0Nv
dW50cnkAVW5pdmVyc2l0eQAAAAAneQB5AHkAeQAtAE0ATQAtAGQAZAAtAEgASAAtAG0AbQAtAHMA
cwABB0QAOgBcAAABAFFoAHQAdABwADoALwAvAHUAbgBpAHYAZQByAHMAaQB0AGkAZQBzAC4AaABp
AHAAbwBsAGEAYgBzAC4AYwBvAG0ALwBzAGUAYQByAGMAaAA/AACArUQAYQB0AGEAIABTAG8AdQBy
AGMAZQAgAD0AIABNAEEAUgBJAE8ALQBQAEMAOwAgAEkAbgBpAHQAaQBhAGwAIABDAGEAdABhAGwA
bwBnACAAPQAgAEQAVwBIAF8AQQBzAHMAaQBnAG4AbQBlAG4AdAA7ACAASQBuAHQAZQBnAHIAYQB0
AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQAgAD0AIABUAHIAdQBlADsAIAABgLtJAE4AUwBFAFIAVAAg
AEkATgBUAE8AIABVAG4AaQB2AGUAcgBzAGkAdAB5ACgAZABvAG0AYQBpAG4AcwAsAGMAbwB1AG4A
dAByAHkALABhAGwAcABoAGEAXwB0AHcAbwBfAGMAbwBkAGUALABzAHQAYQB0AGUAXwBwAHIAbwB2
AGkAbgBjAGUALAB3AGUAYgBfAHAAYQBnAGUAcwAsAG4AYQBtAGUAKQAgAFYAQQBMAFUARQBTACgA
JwABAycAAQUnACcAAQknACwAIAAnAAEFJwApAAEVXABFAHIAcgBvAHIATABvAGcAXwAACS4AbABv
AGcAAHFTAFQAXwBlADEAYQA5AGMANwBmAGMANAAyADkAMAA0AGMANwBiADkAOQA4ADYAYgBlADYA
OAAzAGUAZgAwAGYAZAA3AGQALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBl
AHMAAAAAACxgneTFRclHhlAjHW4hcbQABCABAQgDIAABBSABARERBCABAQ4FIAEBEXEXBwoODhE9
DhJBFRFJARIUEhQSTRJRElUEAAARPQQgAQ4OBAABAQIGAAEBEYCBBhABAR4ADggKARUSRQESFAYV
EkUBEhQIIAAVEUkBEwAGFRFJARIUBCAAEwAFFRJFAQ4FIAETAAgFIAIODg4FAAEOHQ4GIAIBDhJN
AyAACAMgAAIHAAQODg4ODgUAARJVDgMgAA4FIAASgKUIAAESgKkRgK0FIAASgLEHIAIBDhKAsQi3
elxWGTTgiQiJhF3NgIDMkQgwrU/msqau7QQAAAAABAEAAAADBhJpAwYSbQMGEhAGBhUSRQEOAgYO
AgYIAwYRGAQAABJpBAAAEm0FAAEBEm0EAAASEAMAAAEHIAAVEkUBDgggAQEVEkUBDgQIABJpBAgA
Em0ECAASEAcoABUSRQEOAygADggBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93
cwEIAQACAAAAAAAoAQAjU1RfZTFhOWM3ZmM0MjkwNGM3Yjk5ODZiZTY4M2VmMGZkN2QAAAUBAAAA
ABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC43AQBU
DhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K774BAAAAkQAA
AGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAu
MC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lz
dGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAGw4
AAAAAAAAAAAAAIY4AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4OAAAAAAAAAAAAAAAAF9Db3JE
bGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAQBAAAAAAAAAAAAAAQBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEAEQtUIQAAAQARC1QhPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEcAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAATAMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBlADEAYQA5AGMANwBmAGMANAAyADkAMAA0AGMANwBiADkAOQA4ADYAYgBlADYAOAAzAGUA
ZgAwAGYAZAA3AGQAAAA8AA4AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA1
ADMAMgAuADIAOAAzADMAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABfAGIA
MwA0ADcAMQAzADEAYQA3ADYANAAwADQAZgBmADAAYQA3AGUAMQBhAGYAMgA4ADUAYQBlADIAYQA2
ADUAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAA
eQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQAZQBt
AGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAA
UwBUAF8AYgAzADQANwAxADMAMQBhADcANgA0ADAANABmAGYAMABhADcAZQAxAGEAZgAyADgANQBh
AGUAMgBhADYANQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMA
VABfAGUAMQBhADkAYwA3AGYAYwA0ADIAOQAwADQAYwA3AGIAOQA5ADgANgBiAGUANgA4ADMAZQBm
ADAAZgBkADcAZAAAAEAADgABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4A
OAA1ADMAMgAuADIAOAAzADMAAABEAA4AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBu
AAAAMQAuADAALgA4ADUAMwAyAC4AMgA4ADMAMwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAmDgAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Truncate the table"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{0f4faecf-f7b7-4a7d-9963-69f60cae4998}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Truncate the table"
      DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{A420A897-4ED6-4E78-A76B-C8517F52F8BC}"
          SQLTask:SqlStatementSource="truncate table University" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{ec3ab3b9-2c67-48ab-bc4c-90358b37d355}"
      DTS:From="Package\Truncate the table"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\Load the table from the API" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="210,42"
          Id="Package\Load the table from the API"
          TopLeft="60,157" />
        <NodeLayout
          Size="166,42"
          Id="Package\Truncate the table"
          TopLeft="88,60" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="168,102">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55"
              Start="0,0"
              End="0,47.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,47.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>